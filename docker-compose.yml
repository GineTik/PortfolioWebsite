networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - frontend
    networks:
      - dev

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    networks:
      - dev

  authentication-microservice:
    container_name: authentication-microservice
    build:
      context: ./backend/microservices/Users/Users.Presentation
    networks:
      - dev
    ports:
      - "3001:3001"
    environment:
      - NIXPACKS_CSHARP_SDK_VERSION=7.0

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=4e73d001-dcb1-4ee5-b32c-3b45c9ad7128
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    networks:
      - dev